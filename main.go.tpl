// Code generated by protoc-gen-go-mcp. DO NOT EDIT.
// versions:
//  - protoc-gen-go-mcp {{ .PluginVersion }}
//  - protoc         {{ .ProtocVersion }}
// source: {{ .SourcePath }}

package {{ .GoPackageName }}

import (
    "context"
    "github.com/mark3labs/mcp-go/server"
    "github.com/mark3labs/mcp-go/mcp"
    "google.golang.org/protobuf/encoding/protojson"
)

{{ range $service := .Services }}
func New{{.Name}}MCPServer(client {{ .Name }}Client) *server.MCPServer {
    s := server.NewMCPServer(
        "{{ .Name }}",
        "unknown",
    )

    {{ range .Methods }}
    {{ .Name }}Tool := mcp.NewTool(
        "{{ .Name }}",
        {{- range .Input.Fields }}
        mcp.WithString("{{ .Name }}"),
        {{ end }}
    )

    s.AddTool({{ .Name }}Tool, func(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {
        in := &{{ .Input.Name }}{
        {{- range .Input.Fields }}
            {{ .Name }}: request.Params.Arguments["{{ .Name }}"].({{ if .IsPointer }}*{{ end }}{{ .Type }}),
        {{ end }}
        }

        out, err := client.{{ .Name }}(ctx, in)
        if err != nil {
            return mcp.NewToolResultError(err.Error()), nil
        }

        return mcp.NewToolResultText(protojson.Format(out)), nil
    })
    {{ end }}

   return s
}
{{ end }}
